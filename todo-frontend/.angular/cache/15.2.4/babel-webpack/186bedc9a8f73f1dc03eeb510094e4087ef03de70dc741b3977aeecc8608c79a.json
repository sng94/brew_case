{"ast":null,"code":"import { Todo } from './todo';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./todo.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction TodoListComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11)(1, \"div\", 12);\n    i0.ɵɵtext(2, \" Description is required. \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r1 = i0.ɵɵreference(7);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"hidden\", !_r1.errors.required);\n  }\n}\nfunction TodoListComponent_li_10_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 15)(1, \"a\", 16);\n    i0.ɵɵlistener(\"click\", function TodoListComponent_li_10_div_1_Template_a_click_1_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const todo_r5 = i0.ɵɵnextContext().$implicit;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.toggleCompleted(todo_r5));\n    });\n    i0.ɵɵelement(2, \"i\", 17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\", 18);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"span\", 19)(6, \"a\", 20);\n    i0.ɵɵlistener(\"click\", function TodoListComponent_li_10_div_1_Template_a_click_6_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const todo_r5 = i0.ɵɵnextContext().$implicit;\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.editTodo(todo_r5));\n    });\n    i0.ɵɵelementStart(7, \"i\", 21);\n    i0.ɵɵtext(8, \"edit\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"a\", 20);\n    i0.ɵɵlistener(\"click\", function TodoListComponent_li_10_div_1_Template_a_click_9_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const todo_r5 = i0.ɵɵnextContext().$implicit;\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.deleteTodo(todo_r5.id));\n    });\n    i0.ɵɵelementStart(10, \"i\", 22);\n    i0.ɵɵtext(11, \"clear\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const todo_r5 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", todo_r5.desc, \" \");\n  }\n}\nfunction TodoListComponent_li_10_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 23)(1, \"input\", 24);\n    i0.ɵɵlistener(\"ngModelChange\", function TodoListComponent_li_10_div_2_Template_input_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r16 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r16.editingTodo.desc = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"span\", 25)(3, \"a\", 20);\n    i0.ɵɵlistener(\"click\", function TodoListComponent_li_10_div_2_Template_a_click_3_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r18 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r18.updateTodo(ctx_r18.editingTodo));\n    });\n    i0.ɵɵelementStart(4, \"i\", 26);\n    i0.ɵɵtext(5, \"done\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"a\", 20);\n    i0.ɵɵlistener(\"click\", function TodoListComponent_li_10_div_2_Template_a_click_6_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r19 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r19.clearEditing());\n    });\n    i0.ɵɵelementStart(7, \"i\", 26);\n    i0.ɵɵtext(8, \"clear\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r7.editingTodo.desc);\n  }\n}\nfunction TodoListComponent_li_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtemplate(1, TodoListComponent_li_10_div_1_Template, 12, 1, \"div\", 13);\n    i0.ɵɵtemplate(2, TodoListComponent_li_10_div_2_Template, 9, 1, \"div\", 14);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const todo_r5 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"completed\", todo_r5.completed === true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r3.editing || ctx_r3.editingTodo.id != todo_r5.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.editing && ctx_r3.editingTodo.id === todo_r5.id);\n  }\n}\nfunction TodoListComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27)(1, \"p\");\n    i0.ɵɵtext(2, \"No Todos Found!\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class TodoListComponent {\n  constructor(todoService) {\n    this.todoService = todoService;\n    this.todos = [];\n    this.newTodo = new Todo();\n    this.editing = false;\n    this.editingTodo = new Todo();\n  }\n  ngOnInit() {\n    this.getTodos();\n  }\n  getTodos() {\n    this.todoService.getTodos().subscribe(todos => this.todos = todos);\n  }\n  createTodo(todoForm) {\n    this.todoService.createTodo(this.newTodo).subscribe(createTodo => {\n      todoForm.reset();\n      this.newTodo = new Todo();\n      this.todos.unshift(createTodo);\n    });\n  }\n  deleteTodo(id) {\n    this.todoService.deleteTodo(id).subscribe(() => {\n      this.todos = this.todos.filter(todo => todo.id != id);\n    });\n  }\n  updateTodo(todoData) {\n    console.log(todoData);\n    this.todoService.updateTodo(todoData).subscribe(updatedTodo => {\n      let existingTodo = this.todos.find(todo => todo.id === updatedTodo.id) || {};\n      Object.assign(existingTodo, updatedTodo);\n      this.clearEditing();\n    });\n  }\n  toggleCompleted(todoData) {\n    todoData.completed = !todoData.completed;\n    this.todoService.updateTodo(todoData).subscribe(updatedTodo => {\n      let existingTodo = this.todos.find(todo => todo.id === updatedTodo.id) || {};\n      Object.assign(existingTodo, updatedTodo);\n    });\n  }\n  editTodo(todoData) {\n    this.editing = true;\n    Object.assign(this.editingTodo, todoData);\n  }\n  clearEditing() {\n    this.editingTodo = new Todo();\n    this.editing = false;\n  }\n}\nTodoListComponent.ɵfac = function TodoListComponent_Factory(t) {\n  return new (t || TodoListComponent)(i0.ɵɵdirectiveInject(i1.TodoService));\n};\nTodoListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TodoListComponent,\n  selectors: [[\"todo-list\"]],\n  decls: 12,\n  vars: 4,\n  consts: [[1, \"todo-content\"], [1, \"page-title\"], [1, \"todo-create\"], [\"novalidate\", \"\", 3, \"ngSubmit\"], [\"todoForm\", \"ngForm\"], [\"type\", \"text\", \"id\", \"desc\", \"placeholder\", \"Type a todo and press enter...\", \"required\", \"\", \"name\", \"desc\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"desc\", \"ngModel\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [1, \"todo-list\"], [3, \"completed\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"no-todos\", 4, \"ngIf\"], [1, \"alert\", \"alert-danger\"], [3, \"hidden\"], [\"class\", \"todo-row\", 4, \"ngIf\"], [\"class\", \"todo-edit\", 4, \"ngIf\"], [1, \"todo-row\"], [1, \"todo-completed\", 3, \"click\"], [1, \"material-icons\", \"toggle-completed-checkbox\"], [1, \"todo-desc\"], [1, \"todo-actions\"], [3, \"click\"], [1, \"material-icons\", \"edit\"], [1, \"material-icons\", \"delete\"], [1, \"todo-edit\"], [\"type\", \"text\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"edit-actions\"], [1, \"material-icons\"], [1, \"no-todos\"]],\n  template: function TodoListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r20 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\", 1);\n      i0.ɵɵtext(2, \"My Todos\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2)(4, \"form\", 3, 4);\n      i0.ɵɵlistener(\"ngSubmit\", function TodoListComponent_Template_form_ngSubmit_4_listener() {\n        i0.ɵɵrestoreView(_r20);\n        const _r0 = i0.ɵɵreference(5);\n        return i0.ɵɵresetView(ctx.createTodo(_r0));\n      });\n      i0.ɵɵelementStart(6, \"input\", 5, 6);\n      i0.ɵɵlistener(\"ngModelChange\", function TodoListComponent_Template_input_ngModelChange_6_listener($event) {\n        return ctx.newTodo.desc = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(8, TodoListComponent_div_8_Template, 3, 1, \"div\", 7);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"ul\", 8);\n      i0.ɵɵtemplate(10, TodoListComponent_li_10_Template, 3, 4, \"li\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(11, TodoListComponent_div_11_Template, 3, 0, \"div\", 10);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(7);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.newTodo.desc);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", _r1.errors && _r1.dirty);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.todos);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.todos && ctx.todos.length == 0);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["Todo","i0","TodoListComponent","constructor","todoService","ngOnInit","getTodos","subscribe","todos","createTodo","todoForm","newTodo","reset","unshift","deleteTodo","id","filter","todo","updateTodo","todoData","console","log","updatedTodo","existingTodo","find","Object","assign","clearEditing","toggleCompleted","completed","editTodo","editing","editingTodo","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/nehir/Projects/TodoApp/todo-frontend/src/app/todo-list.component.ts","/Users/nehir/Projects/TodoApp/todo-frontend/src/app/todo-list.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { TodoService } from './todo.service';\nimport { Todo } from './todo';\nimport {NgForm} from '@angular/forms';\n\n@Component({\n  selector: 'todo-list',\n  templateUrl: './todo-list.component.html'\n})\n\nexport class TodoListComponent implements OnInit {\n  todos: Todo[] = [];\n  newTodo: Todo = new Todo();\n  editing: boolean = false;\n  editingTodo: Todo = new Todo();\n\n  constructor(\n    private todoService: TodoService,\n  ) {}\n\n  ngOnInit(): void {\n    this.getTodos();\n  }\n\n  getTodos(): void {\n    this.todoService.getTodos()\n      .subscribe(todos => this.todos = todos );    \n  }\n\n  createTodo(todoForm: NgForm): void {\n    this.todoService.createTodo(this.newTodo)\n      .subscribe(createTodo => {        \n        todoForm.reset();\n        this.newTodo = new Todo();\n        this.todos.unshift(createTodo)\n      });\n  }\n\n  deleteTodo(id: string): void {\n    this.todoService.deleteTodo(id)\n    .subscribe(() => {\n      this.todos = this.todos.filter(todo => todo.id != id);\n    });\n  }\n\n  updateTodo(todoData: Todo): void {\n    console.log(todoData);\n    this.todoService.updateTodo(todoData)\n      .subscribe(updatedTodo => {\n        let existingTodo: Partial<Todo> = this.todos.find(todo => todo.id === updatedTodo.id) || {};\n        Object.assign(existingTodo, updatedTodo);\n        this.clearEditing();\n      });\n  }\n\ntoggleCompleted(todoData: Todo): void {\n  todoData.completed = !todoData.completed;\n  this.todoService.updateTodo(todoData)\n    .subscribe(updatedTodo => {\n      let existingTodo: Partial<Todo> = this.todos.find(todo => todo.id === updatedTodo.id) || {};\n      Object.assign(existingTodo, updatedTodo);\n    });\n}\n\n  editTodo(todoData: Todo): void {\n    this.editing = true;\n    Object.assign(this.editingTodo, todoData);\n  }\n\n  clearEditing(): void {\n    this.editingTodo = new Todo();\n    this.editing = false;\n  }\n}","<div class=\"todo-content\">\n    <h1 class=\"page-title\">My Todos</h1>\n    <div class=\"todo-create\">\n      <form #todoForm=\"ngForm\" (ngSubmit)=\"createTodo(todoForm)\" novalidate>\n        <input type=\"text\" id=\"desc\" class=\"form-control\" placeholder=\"Type a todo and press enter...\" \n               required\n               name=\"desc\" [(ngModel)]=\"newTodo.desc\"\n               #desc=\"ngModel\" >\n        <div *ngIf=\"desc.errors && desc.dirty\"\n             class=\"alert alert-danger\">\n            <div [hidden]=\"!desc.errors.required\">\n              Description is required.\n            </div>\n        </div>\n      </form>\n    </div>\n    <ul class=\"todo-list\">\n      <li *ngFor=\"let todo of todos\" [class.completed]=\"todo.completed === true\" >\n        <div class=\"todo-row\" *ngIf=\"!editing || editingTodo.id != todo.id\">\n            <a class=\"todo-completed\" (click)=\"toggleCompleted(todo)\">\n              <i class=\"material-icons toggle-completed-checkbox\"></i> \n            </a> \n            <span class=\"todo-desc\">\n              {{todo.desc}}\n            </span>\n            <span class=\"todo-actions\">\n                <a (click)=\"editTodo(todo)\">\n                  <i class=\"material-icons edit\">edit</i>\n                </a>\n                <a (click)=\"deleteTodo(todo.id)\">\n                  <i class=\"material-icons delete\">clear</i>\n                </a>\n            </span>\n        </div>\n        <div class=\"todo-edit\" *ngIf=\"editing && editingTodo.id === todo.id\">\n            <input class=\"form-control\" type=\"text\" \n             [(ngModel)]=\"editingTodo.desc\" required>\n            <span class=\"edit-actions\">\n                <a (click)=\"updateTodo(editingTodo)\">\n                  <i class=\"material-icons\">done</i>\n                </a>\n                <a (click)=\"clearEditing()\">\n                  <i class=\"material-icons\">clear</i>\n                </a>\n            </span>\n        </div>\n      </li>\n    </ul>\n    <div class=\"no-todos\" *ngIf=\"todos && todos.length == 0\">\n        <p>No Todos Found!</p>\n    </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}